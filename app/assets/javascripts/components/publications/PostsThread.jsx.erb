

class PostsThread extends React.Component {
    constructor(props) {
        super(props);

        this.state = {
            data: [],
            adding_post: false,
            activeTabIndex: (this.props.post_id == null && this.props.comment_id == null) ? 0 : null,
            post_id: this.props.post_id,
            comment_id: this.props.comment_id,
            modalIsActive: false,
            linkReport: ''
        };
    }

    addNewPost(post) {
        post['user'] = this.props.current_user
        post['user']['avatar_url'] = this.props.current_user_avatar
        this.setState((prevState) => {
            return {
                data: [post].concat(prevState.data),
                adding_post: false
            };
        });
    }

    viewNewPostModal() {
        this.setState({adding_post: true});
    }

    closeNewPostModal() {
        this.setState({adding_post: false});
    }

    // Toggle currently active tab
    handleTabClick(tabIndex) {
        if (tabIndex !== this.state.activeTabIndex) {
            this.fetchPosts(tabIndex)
        }
    }

    activeModal(link){
        console.log("afadasdasdads")
        this.setState({modalIsActive: true, linkReport: link})
    }

    disableModal() {
        this.setState({modalIsActive: false});
    }



    render() {
        const {current_user, current_user_avatar, course_id, course_name} = this.props
        const { activeTabIndex, data, adding_post } = this.state
        const activeModal = this.activeModal
        return (
            <div>
                <div className="container corso-thread">
                    <h3 class="title" id="course-name-second">
                      <a href={ '/courses/' + course_id }>{ course_name }</a>
                    </h3>

                    <div id="style-2" className="tabs is-centered">

                        <ul>
                            <li className={activeTabIndex === 0 ? "is-active" : ""}><a
                                onClick={() => this.handleTabClick(0)}><strong>Tutti i post</strong></a></li>
                            <li className={activeTabIndex === 1 ? "is-active" : ""}><a
                                onClick={() => this.handleTabClick(1)}><strong>Upvotes</strong></a></li>
                            <li className={activeTabIndex === 2 ? "is-active" : ""}><a
                                onClick={() => this.handleTabClick(2)}><strong>I miei post</strong></a></li>
                            <li className={activeTabIndex === 3 ? "is-active" : ""}><a
                                onClick={() => this.handleTabClick(3)}><strong>Post commentati</strong></a></li>
                        </ul>

                    </div>


                    { (data.length > 0) ? <div className="posts-list" id="style-1">
                            { data.map(function (post) {
                                return <Post key={post.id}
                                             post={post}
                                             current_user={current_user}
                                             current_user_avatar={current_user_avatar}
                                             course_id={course_id}
                                             activeModal={ activeModal }/>
                            }) }
                        </div> : <div className="posts-list" /> }

                    <div className={"modal " + (adding_post ? "is-active" : "")}>
                        <div className="modal-background" onClick={this.closeNewPostModal.bind(this)} />

                        <NewPost addNewPost={this.addNewPost.bind(this)} current_user={current_user}
                                 current_user_avatar={current_user_avatar} course_id={course_id}/>

                        <button className="modal-close is-large" aria-label="close"
                                onClick={this.closeNewPostModal.bind(this)} />
                    </div>

                    <div className={"modal " + (this.state.modalIsActive ? "is-active" : "")}>
                        <div className="modal-background" onClick={this.disableModal.bind(this)} />

                        <ReportModal  linkReport={this.state.linkReport}
                                      disableModal={this.disableModal.bind(this)} title={"Segnalazione suggerimento"}/>

                        <button className="modal-close is-large" aria-label="close"
                                onClick={this.disableModal.bind(this)} />
                    </div>

                    <figure className="add-button" onClick={this.viewNewPostModal.bind(this)}>
                        <p className="image is-64x64">
                          <%= image_tag "add_post.png" %>
                        </p>
                    </figure>
                </div>


            </div>
        );

    }

    componentDidMount() {
        const {activeTabIndex} = this.state
        this.fetchPosts(activeTabIndex)
    }

    fetchPosts(activeTabIndex) {
        const {course_id, current_user} = this.props

        URL = '/posts?course_id=' + course_id
        if (activeTabIndex === 1)
            URL += '&upvoter_id=' + current_user.id
        if (activeTabIndex === 2)
            URL += '&user_id=' + current_user.id
        if (activeTabIndex === 3)
            URL += '&comment_user_id=' + current_user.id

        if (this.state.post_id !== null)
            URL += '&post_id=' + this.state.post_id
        if (this.state.comment_id !== null)
            URL += '&comment_id=' + this.state.comment_id

        fetch(URL, {
            credentials: 'same-origin'
        }).then(response => response.json())
        .then(data => this.setState({data, activeTabIndex, post_id: null, comment_id: null}));
    }
}