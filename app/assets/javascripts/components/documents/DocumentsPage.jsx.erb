
class DocumentsPage extends React.Component {
    constructor(props) {
        super(props);

        this.state = {
            data: [],
            adding_doc: false,
            activeTabIndex: 0,
            search_string: ""
        };
    }

    addNewDoc(doc) {
        doc['user'] = this.props.current_user;
        doc['user']['avatar_url'] = this.props.current_user_avatar;
        this.setState((prevState) => {
            return {
                data: [doc].concat(prevState.data),
                adding_doc: false
            };
        });
    }

    handleChangeSearch(event) {
        this.setState({search_string: event.target.value});
        this.fetchDocuments(this.state.activeTabIndex, event.target.value);
    }

    viewNewDocModal() {
        this.setState({adding_doc: true});
    }

    closeNewDocModal() {
        this.setState({adding_doc: false});
    }

    // Toggle currently active tab
    handleTabClick(tabIndex) {
        if (tabIndex !== this.state.activeTabIndex) {
            this.fetchDocuments(tabIndex)
        }
    }


    render() {
        const {current_user, current_user_avatar, course_id} = this.props;
        const { data, adding_doc, activeTabIndex } = this.state;

        let documents_list = data.map(function (doc) {
            return (<DocumentFrame key={doc.id} document={doc} current_user={current_user}></DocumentFrame>)
        });

        return (
            <div>
                <div className="container corso-thread">
                    <div className="level is-mobile">

                        <div className="level-left" id="search-input">
                            <div className="control">
                                <input className="input is-medium is-rounded"  onChange={(e) => this.handleChangeSearch(e)}
                                       type="email" placeholder="Cerca" value={this.state.search_string} />
                            </div>
                        </div>
                        <div className="level-item"><div id="style-2" className="tabs is-centered">
                            <ul>
                                <li className={activeTabIndex === 0 ? "is-active" : ""}><a
                                    onClick={() => this.handleTabClick(0)}><strong>Tutti i file</strong></a></li>
                                <li className={activeTabIndex === 1 ? "is-active" : ""}><a
                                    onClick={() => this.handleTabClick(1)}><strong>I miei file</strong></a></li>
                            </ul>

                        </div></div>

                    </div>


                    <div className="resources-list" id="style-1">
                        <div className="grid-container">
                            { documents_list }
                        </div>
                    </div>



                    <div className={"modal " + (adding_doc ? "is-active" : "")}>
                        <div className="modal-background" onClick={this.closeNewDocModal.bind(this)} />

                        <NewDoc addNewDoc={this.addNewDoc.bind(this)} current_user={current_user} course_id={course_id}
                                 current_user_avatar={current_user_avatar}/>

                        <button className="modal-close is-large" aria-label="close"
                                onClick={this.closeNewDocModal.bind(this)} />
                    </div>

                    <figure className="add-button" onClick={this.viewNewDocModal.bind(this)}>
                        <p className="image is-64x64">
                          <%= image_tag "add_post.png" %>
                        </p>
                    </figure>
                </div>
            </div>
        );

    }

    componentDidMount() {
        const {activeTabIndex} = this.state
        this.fetchDocuments(activeTabIndex)
    }

    fetchDocuments(activeTabIndex, search_string='') {
        const {course_id, current_user} = this.props

        URL = '/documents?course_id=' + course_id
        if (activeTabIndex === 1)
          URL += '&user_id=' + current_user.id

        if (search_string !== '')
            URL += '&search_string=' + search_string

        fetch(URL, {
        credentials: 'same-origin'
    })
        .then(response => response.json())
        .then(data => this.setState({data, activeTabIndex}));
    }


}