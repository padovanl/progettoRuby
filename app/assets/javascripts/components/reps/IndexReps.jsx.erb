class IndexReps extends React.Component {
    constructor(props) {
        super(props);

        this.state = {
            reps: [],
            url: '',
            page:1,
            disabledNext: false,
            tabs_activate: 'is-activate',
            courseNames:[],
            modalIsActive: false,
            linkReport: ''
        };
        this.showModal = this.showModal.bind(this);
        this.closeModal = this.closeModal.bind(this);
        this.addNewRep = this.addNewRep.bind(this);
        this.activeModal = this.activeModal.bind(this)

    }

    componentWillMount(){
        getNames('Course')
            .then(data => {
                this.setState({courseNames: data})
            })
            .catch((e) => console.log(e))
    }


    showModal() {
        this.setState((prev, props) => {
            const newState = !prev.modalState;

            return { modalState: newState };
        });
    }

    closeModal() {
        this.setState({modalState: false});
    }



    onChangePage(){
        this.props.onChangePage();
    }

    addNewRep(rep){
        this.props.addNewRep(rep);
    }

    deleteRep(id){
        this.props.deleteRep(id)
    }

    updateRep(rep, id){
        this.props.updateRep(rep,id)
    }

    activeModal(link){
        this.setState({modalIsActive: true});
        this.setState({linkReport: link})
    }

    disableModal() {
        this.setState({modalIsActive: false});
    }

    render(){
        let buttonNext;
        if (this.props.page !== this.props.last_page && !this.props.disabledNext){
            buttonNext= <div className='button is-rounded is-info' onClick={() => this.onChangePage()}>
                <span> Next </span> </div>
        }
        else{
            buttonNext=<div className='button is-rounded is-info disabled'>Next</div>;
        }

        if (this.props.reps.length === 0){
            return (
                <div className="is-danger container" style={{textAlign: 'center', background: '#ffa726', padding: '20px'}} >
                    <div>
                        <p>Ripetizioni non trovate!</p>
                    </div>
                </div>
            )
        }
        else {
            return (
                <div className={"myColumn-lg"}>

                    <div className="infinite-container" align="center">
                        <ItemReps items={this.props.reps} current_user_image={this.props.current_user_image}
                                  current_user={this.props.current_user} courseNames={this.state.courseNames}
                                  deleteRep={(id) => this.deleteRep(id)}
                                  updateRep={(rep, id) => this.updateRep(rep, id)}
                                  activeModal={this.activeModal}
                        />
                    </div>
                    <div className='myRow next-button' style={{marginBottom: '20px'}}>
                        {buttonNext}
                    </div>

                    <a className="fixed" onClick={() => this.showModal()}>
                        <p className="image is-64x64">
                          <%= image_tag "add_post.png" %>
                        </p>
                    </a>
                    <div className={"modal " + (this.state.modalState ? "is-active" : "")}>
                        <div className="modal-background" onClick={this.closeModal}/>
                        <AddRep current_user={this.props.current_user} closeModal={this.closeModal}
                                addNewRep={(rep) => this.addNewRep(rep)} courseNames={this.state.courseNames}/>
                    </div>

                    <div className={"modal " + (this.state.modalIsActive ? "is-active" : "")}>
                        <div className="modal-background" onClick={this.disableModal.bind(this)}/>

                        <ReportModal linkReport={this.state.linkReport}
                                     disableModal={this.disableModal.bind(this)} title={"Segnalazione suggerimento"}/>

                        <button className="modal-close is-large" aria-label="close"
                                onClick={this.disableModal.bind(this)}/>
                    </div>

                </div>

            )
        }
    }


}